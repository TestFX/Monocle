//-------------------------------------------------------------------------------------------------
// GRADLE PLUGINS.
//-------------------------------------------------------------------------------------------------

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3"
    }
}

//-------------------------------------------------------------------------------------------------
// BASIC CONFIGURATION.
//-------------------------------------------------------------------------------------------------

// print welcome message.
apply from: rootProject.file("gradle/welcome.gradle")

// task to add gradle wrapper files.
task("wrapper", type: Wrapper, group: "build setup") {
    gradleVersion = "4.1"
    distributionUrl = "https://services.gradle.org/distributions/" +
            "gradle-${gradleVersion}-all.zip"
}

// task to print gradle and groovy versions.
task("versions", group: "help").doLast {
    println "Java version: ${System.properties["java.version"]}"
    println "Gradle version: ${gradle.gradleVersion}"
    println "Groovy version: ${GroovySystem.version}"
}

// task to create main and test source directories.
task("initSourceDirs", group: "build setup").doLast {
    // ignore source directories for projects without source sets.
    if (!project.hasProperty("sourceSets")) { return }

    // list all source directories.
    def sourceSets = project.sourceSets as SourceSetContainer
    def sourceDirs = sourceSets*.allSource.srcDirs.flatten() as List<File>

    // create source directories, for those who not exists.
    for (sourceDir in sourceDirs) { sourceDir.mkdirs() }
}

//-------------------------------------------------------------------------------------------------
// ROOT PROJECT.
//-------------------------------------------------------------------------------------------------

// provide java tasks.
apply plugin: "java"

// java language level.
sourceCompatibility = "1.9"
targetCompatibility = "1.9"

// configure publish tasks.
apply from: rootProject.file("gradle/publish.gradle")

// task to create jar with source code.
task("sourceJar", type: Jar) {
    group "Build"
    description "An archive of the source code"
    classifier "sources"
    from sourceSets.main.allJava
}

// task to create jar with javadocs.
task("javadocJar", type: Jar) {
    group "Build"
    description "An archive of the javadoc"
    classifier "javadoc"
    from javadoc
}

jar.finalizedBy sourceJar
jar.finalizedBy javadocJar

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

ext {
    def buildTimeAndDate = new Date()
    buildDate = buildTimeAndDate.format("yyyy-MM-dd")
    buildTime = buildTimeAndDate.format("HH:mm:ss.SSSZ")

    javaVersion = System.properties["java.version"]
    javaVendor = System.properties["java.vendor"]
    javaVmVersion = System.properties["java.vm.version"]
}

jar {
    manifest.attributes(
        "Created-By": project.javaVersion +
            " (" + project.javaVendor + " " + project.javaVmVersion + ")",
        "Build-Date": project.buildDate,
        "Build-Time": project.buildTime,
        "Specification-Title": project.name,
        "Specification-Version": project.version,
        "Specification-Vendor": project.vendor,
        "Implementation-Title": project.name,
        "Implementation-Version": project.version,
        "Implementation-Vendor": project.vendor
    )
}

javadoc {
    options.addStringOption("Xdoclint:none", "-quiet")
}
